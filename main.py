# main.py
import sys, os
import subprocess
import logging
from PyQt5.QtWidgets import QApplication
from gui.main_screen import MainScreen

os.environ["XDG_SESSION_TYPE"] = "x11"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logger = logging.getLogger("main")
logger.setLevel(logging.INFO)
handler = logging.StreamHandler()
handler.setFormatter(logging.Formatter("[%(asctime)s] [%(levelname)s] %(message)s", "%H:%M:%S"))
logger.addHandler(handler)

def launch_realtime():
    try:
        subprocess.Popen([sys.executable, "run_realtime.py"], stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        logger.info("üöÄ –†–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∑–∞–ø—É—â–µ–Ω–æ –≤ —Ñ–æ–Ω–µ")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ realtime: {e}")

def launch_full():
    try:
        logger.info("üì¶ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞...")
        subprocess.run([sys.executable, "run_full.py"], check=True)
        logger.info("‚úÖ –ü–æ–ª–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à—ë–Ω")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞: {e}")

if __name__ == "__main__":
    launch_full()
    launch_realtime()

    app = QApplication(sys.argv)
    main_screen = MainScreen()
    main_screen.show()
    sys.exit(app.exec_())
